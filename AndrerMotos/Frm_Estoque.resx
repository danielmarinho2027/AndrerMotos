<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="button1.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAUkAAACZCAMAAACVHTgBAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAADYUExURf7+/v///4GBgfrdub28wUZCYPncu728v2hoaHR0dF1dXaSkpISEhFZWVlhYV7u9wfT0
        9NjY2E1NTZ2dncrKyjc3NyUlJYGBhZOTk0VFRcLCxPX19TAwMHx8fD8/P3V1eGxrb+Pj40xJTbS0tsu5
        n+Li4rW1udLS0lFRVlFPXpKRk1pbX1BOXsbGxt7Gq11aWEdDWFVUXKaZiXZwa+rQsLqqluTLr8CwmlBQ
        TKurr0hEXyAgIT0/RYN7dpCGfJqPgfbesuvZw7y0rG5pZbCkkkdIUsi3mVpXUP8oWpYAABWJSURBVHhe
        7Z0NY6K6toaNdhQi4WjwHhUPo4KtKezqqP0YZtd2zm3n7v//j+5aSUCs2LEzbWFmfPaeilEgeV1ZWfkA
        KkVA2qZVJIapMbwp0Xn6NSE9btNSwLxfXUnmVUsBNSu/tJSgpKWLUizWUclXwrKPSr4Ov4GSVCmp29JC
        kOf/9Wu3UtJgHGHvD5wV2zyIh34LJT1ebRaFx83fScmPp6QoWr+Zku2iikEGSsnfxE8elfxpyqPksXb/
        LEclX4ujkq/Fb6ykDk6eoj99dX5fJcmYqv5OFsbezGZ/YyUD7unexwaL9/5MJQ+vjDlKNvlY1ecMAzv8
        /ZXEgupNDXTA4taBucpRsgFK6u0EUjGab1XMsigJ5tJqDZSWBLMCuo4dfnBlzFHSzVGyZf/uSpKBQzk3
        mi20zHYDdKy0LWghbPtAozwqqSCtEegI/2h7cNqjvDFoO9Dw9toeD341JQvtdxNS5T2s2oEcMbWZaTHO
        YmgwTjk9LF9HJSVQaA9dJIFWgpnTsWczCm0Nplj8sKIflZSQIVcCkEoTfeSUc+kw0Wdy46B8vVRJffif
        RR5LUQo/STjVDYvMHcQqoCwZ9zx4b/GLQzL2MiVlpPAKZDUrg00SYmw30SBC2LbAZV6gfRqDA3L2QiXt
        f//nNfg7E+eXQEkIeIxtwyPEw9k6j43ARI2Dmu8XKhn3Xof0bHDMopUEq4tNzrYXeJGY2V5rICt5wI0D
        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
        RU5ErkJggg==
</value>
  </data>
</root>